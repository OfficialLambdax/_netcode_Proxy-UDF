15.02.2022 (DD/MM/YYYY) 0.2.3.1

	Fixed
		- _netcode_Proxy_SetLogging() setting the logging toggle for the wrong addon.


15.02.2022 (DD/MM/YYYY) 0.2.3

	SCRIPT BREAKING CHANGES
	
	Added
		- _netcode_Proxy_SetLogging(). Can be used to enable or disable the logging to the console.

	Changed
		- The "Connect" and "Destination" middleman can now return a Socket instead of just a IP and Port.
		
		- The "Between" Middleman now also gets the BinaryLen() of the Data as a param.
		
	Removed
		- The HTTP/S functions from the plain UDF. It got moved to the "simple http_s proxy" example.
		
	What you need to change.
	
		If you use the "Between" middleman then add a new Param to your Callback function: $nLen.
		It will contain the BinaryLen() of the $sData param.
		
		If you use the HTTP/S functions, then implement them from the "simple http_s proxy" example.
		They are no longer present in the UDF.
		

31.01.2022 (DD/MM/YYYY) 0.2.2

	Added
		- The usage of __netcode_UDFVersionCheck() from the core to check for a version update once a day.


30.01.2022 (DD/MM/YYYY) 0.2.1

	SCRIPT BREAKING CHANGES
	
	Considering that the Traffic tab in Github shows that zero users yet downloaded or viewed the Proxy UDF,
	my best guess is that i dont have to write what exactly needs to be changed.


29.01.2022 (DD/MM/YYYY) 0.2
	
	SCRIPT BREAKING CHANGES
	THIS VERSION IS AN ENTIRE OVERHAUL
	
	Script now requires _netcode_AddonCore.au3
	
	This version is much more performant then any of the recent and now fully utilizes non blocking sockets.
	
	Known Bugs
		
		Minor
			The http/s proxy example opened with _netcode_Proxy_CreateHttpProxy() has issues with http requests.
			400 Bad Request.
			
		Minor
			TCPNameToIP() returns in some cases a different ip then where the website actually is.


21.11.2021 (DD/MM/YYYY) 0.1.3
	Additions
		- _netcode_ProxyClientGetParent() returns the parent Socket of the given Client socket.
		Usefull to retrieve data saved to the Parent.
		
		- The UDF now checks what _netcode_Core version it is running with. And it will warn to Console if the _netcode_Core version is older or newer that the UDF is approved with.
		
	Changes
		- your callback set with _netcode_ProxySetMiddleman() at $nWhere = 1 now also can return a socket.
		So you can do your own Connect within the callback and then return it in a array at index 0.


16.10.2021 (DD/MM/YYYY) 0.1.2
	Changes
		- Introduced __netcode_ProxyEventStrippingFix() to make it possible to use stripping


16.10.2021 (DD/MM/YYYY) 0.1.1
	Fixes
		- Duo to the latest _netcode_Core 0.1.2 update the Proxy will now no longer randomly disconnect sockets.
		The issue came from __netcode_TCPRecv() and is now fixed.

15.10.2021 (DD/MM/YYYY) 0.1.1
	Fixes
		None
	
	Changes
		- The Proxy now makes better use of non blocking sockets. Until this update each 'send' call was repeated until WSAGetLastError no longer returned 10035. Duo to this a slower connection could slow down all other connections because the proxy was stuck in this function. This was changed. The Proxy now keeps recieved data in a temporary buffer until the send of it succeeded. The Proxy also only Receives the next data once this buffer is emptied. So the proxy doesnt accept more data then it can send.
		
		- The Proxy will no longer force its eco mode on you. "if $nSendBytes = 0 Then Sleep(10)" from _netcode_ProxyLoop() was removed aka commented.
		
		
	Upgrades
		- Duo to the changes mentioned above the proxy is better capable to manage a larger amount of connections and data send through them.
		
	Remarks
		- Beaware that the Proxy makes no use of 'select' yet so tunneling thousands of connections through it can become an issue. Besides that sockets used to 'connect' are yet still blocking. So connection attempts from the proxy to the destination will still lag the whole proxy, especially on very slow or not responding servers.